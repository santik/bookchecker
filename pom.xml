<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.bezkoder</groupId>
	<artifactId>spring-boot-validate-request-body</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-boot-validate-request-body</name>
	<description>Spring Boot Custom Validation example</description>
	<properties>
		<spring-boot.version>3.3.3</spring-boot.version>
		<java.version>17</java.version>
		<openapi-generator-maven-plugin.version>7.8.0</openapi-generator-maven-plugin.version>
		<jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>
		<jackson-datatype-jsr310.version>2.13.0</jackson-datatype-jsr310.version>
		<swagger-annotations.version>2.2.22</swagger-annotations.version>
		<lombok.version>1.18.34</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<mapstruct.version>1.6.2</mapstruct.version>
		<langchain4j.version>0.34.0</langchain4j.version>
		<mapdb.version>3.1.0</mapdb.version>
		<flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapdb</groupId>
			<artifactId>mapdb</artifactId>
			<version>${mapdb.version}</version>
		</dependency>
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j</artifactId>
			<version>${langchain4j.version}</version>
		</dependency>
		<dependency>
			<groupId>dev.langchain4j</groupId>
			<artifactId>langchain4j-open-ai-spring-boot-starter</artifactId>
			<version>${langchain4j.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.12.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version> <!-- Check for the latest version -->
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version> <!-- Check for the latest version -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable.version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>app</finalName>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.yml</include>
					<include>**/*.yaml</include>
					<include>**/*.json</include>
					<include>**/*.schema</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.pfx</include>
					<include>**/*.pem</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
				<excludes>
					<exclude>karate/**/*.java</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven-plugin.version}</version> <!-- Check for the latest version -->
				<inherited>false</inherited>
				<configuration>
					<generateSupportingFiles>false</generateSupportingFiles>
					<generatorName>spring</generatorName>
					<library>spring-boot</library>
					<configOptions>
						<useSpringBoot3>true</useSpringBoot3>
						<immutableModels>true</immutableModels>
						<interfaceOnly>true</interfaceOnly>
						<skipDefaultInterface>true</skipDefaultInterface>
						<validateSpec>false</validateSpec>
						<useTags>true</useTags>
						<sourceFolder>src/main/java</sourceFolder>
					</configOptions>
				</configuration>
				<executions>
					<execution>
						<id>Question api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/producer/questionsapi.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<output>${project.build.directory}/generated-sources</output>
							<apiPackage>com.santik.bookchecker.producer.questions.api</apiPackage>
							<modelPackage>com.santik.bookchecker.producer.questions.model</modelPackage>
							<configOptions>
								<delegatePattern>false</delegatePattern>
								<dateLibrary>java8</dateLibrary>
								<useJakartaEe>true</useJakartaEe>
								<interfaceOnly>true</interfaceOnly>
								<skipDefaultInterface>true</skipDefaultInterface>
								<useBeanValidation>true</useBeanValidation>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<useGenericResponse>true</useGenericResponse>
								<serializableModel>true</serializableModel>
								<generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
								<additionalModelTypeAnnotations>
									@lombok.Builder
									@lombok.NoArgsConstructor
									@lombok.AllArgsConstructor
								</additionalModelTypeAnnotations>
							</configOptions>
							<typeMappings>
								<typeMapping>Double=java.math.BigDecimal</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
					<execution>
						<id>Login api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/producer/auth.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<output>${project.build.directory}/generated-sources</output>
							<apiPackage>com.santik.bookchecker.producer.login.api</apiPackage>
							<modelPackage>com.santik.bookchecker.producer.login.model</modelPackage>
							<configOptions>
								<delegatePattern>false</delegatePattern>
								<dateLibrary>java8</dateLibrary>
								<useJakartaEe>true</useJakartaEe>
								<interfaceOnly>true</interfaceOnly>
								<skipDefaultInterface>true</skipDefaultInterface>
								<useBeanValidation>true</useBeanValidation>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<useGenericResponse>true</useGenericResponse>
								<serializableModel>true</serializableModel>
								<generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
								<additionalModelTypeAnnotations>
									@lombok.Builder
									@lombok.NoArgsConstructor
									@lombok.AllArgsConstructor
								</additionalModelTypeAnnotations>
							</configOptions>
							<typeMappings>
								<typeMapping>Double=java.math.BigDecimal</typeMapping>
							</typeMappings>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<id>maven-plugin-repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<useUniqueVersions>false</useUniqueVersions>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Filename>${project.artifactId}.${project.packaging}</Implementation-Filename>
							<Implementation-Nexus-Filename>${project.build.finalName}.${project.packaging}</Implementation-Nexus-Filename>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<flattenedPomFilename>flattened-pom.xml</flattenedPomFilename>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>  <!-- runs the frontend build after downloading the required dependencies -->
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.15.1</version>
				<configuration>
					<workingDirectory>src/main/frontend</workingDirectory>
					<installDirectory>target/frontend</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install-node</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v22.9.0</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin> <!-- put the built UI into boot's static folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>copy-ui-app</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/frontend/dist</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
